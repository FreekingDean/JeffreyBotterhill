# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
variables:
  HELM_EXPERIMENTAL_OCI: 1

stages:
  - test
  - build
  - deploy

lint-helm:
  image:
    name: alpine/helm:3.2.1
    entrypoint: ["/bin/sh", "-c"]
  stage: test
  script:
    - helm lint $CI_PROJECT_DIR/deploy/chart/jeffrey-botterhill

docker-build:
  # Use the official docker image.
  image:
    name: gcr.io/kaniko-project/executor:debug
  stage: build
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy:
  stage: deploy
  image:
    name: alpine/helm:3.2.1
    entrypoint: ["/bin/sh", "-c"]
  script:
    - cd $CI_PROJECT_DIR/deploy/chart/jeffrey-botterhill
    - helm install . -f values.yaml --set gitsha=$CI_COMMIT_SHA

